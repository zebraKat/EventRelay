[{"title":"EventRelay","type":0,"sectionRef":"#","url":"/EventRelay/api/EventRelay","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"EventRelay","url":"/EventRelay/api/EventRelay#functions","content":" "},{"title":"new​","type":1,"pageTitle":"EventRelay","url":"/EventRelay/api/EventRelay#new","content":"&lt;/&gt; EventRelay.new( remote: RemoteEvent ,-- The RemoteEvent you'd like to listen to config: config-- The config for EventRelay to follow ) → EventRelay-- Returns the EventRelay Creates a new EventRelay for later use.  "},{"title":"Listen​","type":1,"pageTitle":"EventRelay","url":"/EventRelay/api/EventRelay#Listen","content":"&lt;/&gt; EventRelay:Listen( callback: (any) → any?-- Function to fire ) → number-- Returns success code. 1 -&gt; Success | 0 -&gt; Timeout Starts listening until it finds one that abides to the config. It then fires the callback and stops listening.  "},{"title":"StopListening​","type":1,"pageTitle":"EventRelay","url":"/EventRelay/api/EventRelay#StopListening","content":"&lt;/&gt; EventRelay:StopListening() → nil Safe wrapper to manually stop listening to the signal.  "},{"title":"Destroy​","type":1,"pageTitle":"EventRelay","url":"/EventRelay/api/EventRelay#Destroy","content":"&lt;/&gt; EventRelay:Destroy() → nil Function to cleanup and destroy the EventRelay. "}]