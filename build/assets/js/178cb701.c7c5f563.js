"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[293],{39816:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new EventRelay for later use.","params":[{"name":"remote","desc":"The RemoteEvent you\'d like to listen to","lua_type":"RemoteEvent"},{"name":"config","desc":"The config for EventRelay to follow","lua_type":"config"}],"returns":[{"desc":"Returns the EventRelay","lua_type":"EventRelay"}],"function_type":"static","source":{"line":37,"path":"src/EventRelay.lua"}},{"name":"Listen","desc":"Starts listening until it finds one that abides to the config.\\nIt then fires the callback and stops listening.","params":[{"name":"callback","desc":"Function to fire","lua_type":"(any) -> any?"}],"returns":[{"desc":"Returns success code. 1 -> Success | 0 -> Timeout","lua_type":"number"}],"function_type":"method","source":{"line":64,"path":"src/EventRelay.lua"}},{"name":"StopListening","desc":"Safe wrapper to manually stop listening to the signal.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":87,"path":"src/EventRelay.lua"}},{"name":"Destroy","desc":"Function to cleanup and destroy the EventRelay.","params":[],"returns":[{"desc":"","lua_type":"nil"}],"function_type":"method","source":{"line":100,"path":"src/EventRelay.lua"}}],"properties":[],"types":[],"name":"EventRelay","desc":"Event Relay class init.\\r","realm":["Server"],"source":{"line":6,"path":"src/EventRelay.lua"}}')}}]);